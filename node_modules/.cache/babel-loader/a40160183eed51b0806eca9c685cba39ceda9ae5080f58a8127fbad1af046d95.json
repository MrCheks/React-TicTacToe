{"ast":null,"code":"var _jsxFileName = \"/Users/franciscodiaz/reactProjects/test-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count;\nfunction MyButton({\n  count,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: [\"Clicked \", count, \" times\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n\n//Both of these buttons receive the same count state and onClick function as props.\n\n//Because both MyButton components are using the same count state and onClick function, clicking on either button will increment the count state in the MyApp component.\n_c = MyButton;\nexport default function MyApp() {\n  _s();\n  const [count, setCount] = useState(0);\n  const onClick = function () {\n    setCount(count + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      count: count,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      count: count,\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(MyApp, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c2 = MyApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyButton\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"names":["count","MyButton","onClick","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MyApp","_s","setCount","useState","_c2","$RefreshReg$"],"sources":["/Users/franciscodiaz/reactProjects/test-app/src/App.js"],"sourcesContent":["let count;\n\nfunction MyButton({ count, onClick }) {\n  return <button onClick={onClick}>Clicked {count} times</button>;\n}\n\n//Both of these buttons receive the same count state and onClick function as props.\n\n//Because both MyButton components are using the same count state and onClick function, clicking on either button will increment the count state in the MyApp component.\n\nexport default function MyApp() {\n  const [count, setCount] = useState(0);\n\n  const onClick = function () {\n    setCount(count + 1);\n  };\n\n  return (\n    <div>\n      <h1>Header</h1>\n\n      {/* Here, count={count} is setting a PROP named COUNT on the MyButton component. The value of this prop is the current state of count in the MyApp component. */}\n\n      <MyButton count={count} onClick={onClick} />\n      <MyButton count={count} onClick={onClick} />\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,IAAIA,KAAK;AAET,SAASC,QAAQA,CAAC;EAAED,KAAK;EAAEE;AAAQ,CAAC,EAAE;EACpC,oBAAOC,OAAA;IAAQD,OAAO,EAAEA,OAAQ;IAAAE,QAAA,GAAC,UAAQ,EAACJ,KAAK,EAAC,QAAM;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACjE;;AAEA;;AAEA;AAAAC,EAAA,GANSR,QAAQ;AAQjB,eAAe,SAASS,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACX,KAAK,EAAEY,QAAQ,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMX,OAAO,GAAG,SAAAA,CAAA,EAAY;IAC1BU,QAAQ,CAACZ,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,oBACEG,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAIfL,OAAA,CAACF,QAAQ;MAACD,KAAK,EAAEA,KAAM;MAACE,OAAO,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CL,OAAA,CAACF,QAAQ;MAACD,KAAK,EAAEA,KAAM;MAACE,OAAO,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACG,EAAA,CAjBuBD,KAAK;AAAAI,GAAA,GAALJ,KAAK;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}